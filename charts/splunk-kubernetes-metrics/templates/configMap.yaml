apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "splunk-kubernetes-metrics.fullname" . }}
  labels:
    app: {{ template "splunk-kubernetes-metrics.name" . }}
    chart: {{ template "splunk-kubernetes-metrics.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  fluent.conf: |
    # system wide configurations
    <system>
      log_level {{ or .Values.logLevel .Values.global.logLevel | default "info" }}
    </system>

    <source>
      @type udp
      tag metrics.udp
      port 9001
      message_length_limit 100m
      <parse>
        @type ltsv
        delimiter_pattern /\|g\s*/
      </parse>
    </source>

    <match metrics.udp>
      @type splunk_hec
      data_type metric
      protocol {{ or .Values.splunk.hec.protocol .Values.global.splunk.hec.protocol | default "https" }}
      hec_host {{ required "splunk.hec.host is required." (or .Values.splunk.hec.host .Values.global.splunk.hec.host) }}
      {{- with $hecPort := or .Values.splunk.hec.port .Values.global.splunk.hec.port }}
      {{ if $hecPort }}hec_port {{ $hecPort }}{{ end }}
      {{- end }}
      hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
      host "#{ENV['SPLUNK_HEC_HOST']}"
      {{- if .Values.splunk.hec.indexName }}
      index {{ .Values.splunk.hec.indexName }}
      {{- end }}
      source ${tag}
      insecure_ssl {{ or .Values.splunk.hec.insecureSSL .Values.global.splunk.hec.insecureSSL | default false }}
      {{- with $clientCert := or .Values.splunk.hec.clientCert .Values.global.splunk.hec.clientCert }}
      {{ if $clientCert }}client_cert /fluentd/etc/splunk/hec_client_cert{{ end }}
      {{- end }}
      {{- with $clientKey := or .Values.splunk.hec.clientKey .Values.global.splunk.hec.clientKey }}
      {{ if $clientKey }}client_key /fluentd/etc/splunk/hec_client_key{{ end }}
      {{- end }}
      {{- with $caFile := or .Values.splunk.hec.caFile .Values.global.splunk.hec.caFile }}
      {{ if $caFile }}ca_file /fluentd/etc/splunk/hec_ca_file{{ end }}
      {{- end }}
      <buffer>
        @type memory
        {{- $limit := .Values.resources.limit }}
        chunk_limit_size {{ if $limit.memory }}{{ template "splunk-kubernetes-logging.convert-memory" $limit.memory }}{{ else }}{{ "500m" }}{{ end }}
        chunk_limit_records 100000
        flush_interval 5s
        flush_thread_count 1
        overflow_action block
        retry_max_times 3
      </buffer>
    </match>
