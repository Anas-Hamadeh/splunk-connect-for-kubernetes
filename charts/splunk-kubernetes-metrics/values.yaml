# Default values for splunk-kubernetes-logging.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# = Log Level =
# logLevel is to set log level of the Splunk kubernetes metrics collector. Avaiable values are:
# * debug
# * info
# * warn
# * error
logLevel: "info"


# Disable RBAC (Role-Based Access Control)
# By default, this chart creates a service account which is bound to a cluster role
# that has necessary permissions for heapster to do its job.
# If you don't want it to create the service account and cluster role, set `disableRBAC` to `true`.
disableRBAC: false


# = Splunk UDP Connection =
splunk:
  # Configurations for HEC (HTTP Event Collector)
  hec:
    # host is required and should be provided by user
    host:
    # port to HEC, optional, default 8088
    port:
    # token is required and should be provided by user
    token:
    # protocol has two options: "http" and "https", default is "https"
    protocol:
    # indexName tells which index to use, this is optional. If it's not present, will use the default one configured in HEC.
    indexName:
    # insecureSSL is a boolean, it indecates should it allow inscure SSL connection (when protocol is "https"). Default is false.
    insecureSSL:
    # The PEM-format CA certificate for this client.
    # NOTE: The content of the certificate itself should be used here, not the file path.
    #       The certificate will be stored as a secret in kubernetes.
    clientCert:
    # The private key for this client.
    # NOTE: The content of the key itself should be used here, not the file path.
    #       The key will be stored as a secret in kubernetes.
    clientKey:
    # The PEM-format CA certificate file.
    # NOTE: The content of the file itself should be used here, not the file path.
    #       The file will be stored as a secret in kubernetes.
    caFile:


# = Global Configs =
# allow to use settings for Splunk UDP input from global.
# global settings have lower priority.
global:
  logLevel:
  splunk:
    hec: {}


image:
  tag: v1.5.1
  pullPolicy: IfNotPresent


resources:
  # keep request = limit to keep this container in guaranteed class
  limits:
    cpu: 100m
    memory: 300Mi
  requests:
    cpu: 100m
    memory: 300Mi


nodeSelector: {}
  # kubernetes.io/role: master


tolerations: []
  # - key: "node-role.kubernetes.io/master"
  #   operator: "Exists"
  #   effect: "NoSchedule"


affinity: {}
