# Configurable parameters and default values for splunk-kubernetes-logging.
# This is a YAML-formatted file.
# Declared variables will be passed into templates.

# logLevel is to set log level of the Splunk log collector. Avaiable values are:
# * trace
# * debug
# * info (default)
# * warn
# * error
logLevel:


# Directory where to read journald logs.
journalLogPath: /run/log/journal


detectMultilineExceptions:
  # Enable (fluent-plugin-detect-exceptions)[https://github.com/GoogleCloudPlatform/fluent-plugin-detect-exceptions].
  # Note: once enabled, fluentd's performance will be downgraded.
  enable: false


# Defines the sources for *kubernetes system components'* logs.
#
# It supports 3 kinds of sources: journald, file, and container
# For `journald` logs, `unit` is required for filtering using _SYSTEMD_UNIT, example:
# ```
# docker:
#   journald:
#     unit: docker.service
# ```
#   
# For `file` logs, `path` is required for specifying where is the log files. Log files are expected in `/var/log`, example:
# ```
# docker:
#   file:
#     path: /var/log/docker.log
# ```
#
# For `container` logs, no additional configs are required, just simply set `container: true`, example:
# ```
# kube-apiserver:
#   container: true
# ```
kubeComponents:
  docker:
    journald:
      unit: docker.service
  containerd:
    journald:
      unit: containerd.service
  kubelet:
    journald:
      unit: kubelet.service
  etcd: # or etcd-server
    container: true
  etcd-events: # or etcd-server-events
    container: true
  kube-apiserver:
    container: true
  kube-scheduler:
    container: true
  kube-controller-manager:
    container: true
  kube-proxy:
    container: true
  kubedns:
    container: true
  dns-controller:
    container: true
  kube-dns-autoscaler:
    container: true
  cloud-controller-manager:
    container: true

# Local splunk configurations
splunk:
  # Configurations for HEC (HTTP Event Collector)
  hec:
    # host is required and should be provided by user
    host:
    # port to HEC, optional, default 8088
    port:
    # token is required and should be provided by user
    token:
    # protocol has two options: "http" and "https", default is "https"
    protocol:
    # indexName tells which index to use, this is optional. If it's not present, will use the default one configured in HEC.
    indexName:
    # insecureSSL is a boolean, it indecates should it allow inscure SSL connection (when protocol is "https"). Default is false.
    insecureSSL:
    # The PEM-format CA certificate for this client.
    # NOTE: The content of the certificate itself should be used here, not the file path.
    #       The certificate will be stored as a secret in kubernetes.
    clientCert:
    # The private key for this client.
    # NOTE: The content of the key itself should be used here, not the file path.
    #       The key will be stored as a secret in kubernetes.
    clientKey:
    # The PEM-format CA certificate file.
    # NOTE: The content of the file itself should be used here, not the file path.
    #       The file will be stored as a secret in kubernetes.
    caFile:

# Global configurations
# These configurations will be used if the corresponding local configurations are not set.
# For example, if `global.logLevel` is set and `logLevel` is not set, `global.logLevel` will be used; if `logLevel` is set, it will be used regardless `global.logLevel` is set or not.
global:
  logLevel: info
  # If local splunk configurations are not present, the global ones will be used (if available)
  splunk:
    # It has exactly the same configs as splunk.hec does
    hec:
      protocol: https
      insecureSSL: false


# Defines which version of image to use, and how it should be pulled.
image:
  tag: 0.1.2
  pullPolicy: IfNotPresent


# Controls the resources used by the fluentd daemonset
resources:
  # limits:
  #  cpu: 100m
  #  memory: 200Mi
  requests:
   cpu: 100m
   memory: 200Mi


# This default tolerations allow the daemonset to be deployed on master nodes,
# so that we can also collect logs from those nodes.
tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule


# Defines which nodes should be selected to deploy the fluentd daemonset.
nodeSelector: {}


# Defines node affinity to restrict pod deployment.
affinity: {}
