# Default values for splunk-kubernetes-logging.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# = Global Configs =
# Allow to pass config values from parent chart using `global.*`.
# Global values have lower priority.
# Values defined here are the default values.
global:
  logLevel: info
  splunk:
    hec:
      port: 8088
      protocol: https
      insecureSSL: false


# = Log Level =
# logLevel is to set log level of the Splunk kubernetes metrics collector. Avaiable values are:
# * debug
# * info
# * warn
# * error
#
# Default value: "info"
logLevel:


rbac:
  # Specifies whether RBAC resources should be created.
  # This should be set to `false` if either:
  # a) RBAC is not enabled in the cluster, or
  # b) you want to create RBAC resources by yourself.
  create: true


serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:


# = Splunk HEC Connection =
splunk:
  # Configurations for HEC (HTTP Event Collector)
  hec:
    # hostname/ip of HEC, REQUIRED.
    host:
    # port to HEC, OPTIONAL. Default value: 8088
    port:
    # the HEC token, REQUIRED.
    token:
    # protocol has two options: "http" and "https". Default value: "https"
    protocol:
    # indexName tells which index to use, OPTIONAL. If it's not present, the default index configured in HEC will be used.
    indexName:
    # insecureSSL is a boolean, it indecates should it allow inscure SSL connection (when protocol is "https"). Default value: false
    insecureSSL:
    # The PEM-format CA certificate for this client.
    # NOTE: The content of the certificate itself should be used here, not the file path.
    #       The certificate will be stored as a secret in kubernetes.
    clientCert:
    # The private key for this client.
    # NOTE: The content of the key itself should be used here, not the file path.
    #       The key will be stored as a secret in kubernetes.
    clientKey:
    # The PEM-format CA certificate file.
    # NOTE: The content of the file itself should be used here, not the file path.
    #       The file will be stored as a secret in kubernetes.
    caFile:


image:
  name: chaitanyaphalak/k8s-new-metrics:beta-ssl-latest
  pullPolicy: Always


resources:
  fluent:
    limits:
      cpu: 200m
      memory: 300Mi
    requests:
      cpu: 200m
      memory: 300Mi


nodeSelector: {}
  # kubernetes.io/role: master


tolerations: []
  # - key: "node-role.kubernetes.io/master"
  #   operator: "Exists"
  #   effect: "NoSchedule"


affinity: {}

# = Kubernetes Connection Configs =
kubernetes:
  # the URL for calling kubernetes API, by default it will be read from the environment variables
  url:
  # if insecureSSL is set to true, insecure HTTPS API call is allowed, default false
  insecureSSL: false
  # Path to the certificate file for this client.
  clientCert:
  # Path to the private key file for this client.
  clientKey:
  # Path to the CA file.
  caFile:
  # Path to the file contains the API token. By default it reads from the file "token" in the `secret_dir`.
  bearerTokenFile:
  # Path of the location where pod's service account's credentials are stored. Usually you don't need to care about this config, the default value should work in most cases.
  secretDir:
  # a list of kubernetes objects to pull periodically
